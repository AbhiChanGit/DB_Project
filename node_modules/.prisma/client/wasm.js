
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.6.0
 * Query Engine version: f676762280b54cd07c770017ed3711ddde35f37a
 */
Prisma.prismaVersion = {
  client: "6.6.0",
  engine: "f676762280b54cd07c770017ed3711ddde35f37a"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  username: 'username',
  password: 'password',
  email: 'email',
  user_type: 'user_type',
  created_at: 'created_at'
};

exports.Prisma.CustomerScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  first_name: 'first_name',
  last_name: 'last_name',
  phone: 'phone',
  account_balance: 'account_balance'
};

exports.Prisma.StaffScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  first_name: 'first_name',
  last_name: 'last_name',
  phone: 'phone',
  salary: 'salary',
  job_title: 'job_title',
  hire_date: 'hire_date'
};

exports.Prisma.AddressScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  address_type: 'address_type',
  street_address: 'street_address',
  city: 'city',
  state: 'state',
  postal_code: 'postal_code',
  country: 'country',
  is_default: 'is_default'
};

exports.Prisma.CreditCardScalarFieldEnum = {
  id: 'id',
  customer_id: 'customer_id',
  card_number: 'card_number',
  card_holder_name: 'card_holder_name',
  expiry_date: 'expiry_date',
  cvv: 'cvv',
  billing_address_id: 'billing_address_id',
  is_default: 'is_default'
};

exports.Prisma.CategoryScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description'
};

exports.Prisma.ProductScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  category_id: 'category_id',
  brand: 'brand',
  product_type: 'product_type',
  size: 'size',
  image_url: 'image_url',
  created_at: 'created_at',
  last_updated: 'last_updated'
};

exports.Prisma.ProductPriceScalarFieldEnum = {
  id: 'id',
  product_id: 'product_id',
  price: 'price',
  start_date: 'start_date',
  end_date: 'end_date',
  set_by_staff_id: 'set_by_staff_id'
};

exports.Prisma.WarehouseScalarFieldEnum = {
  id: 'id',
  name: 'name',
  address_id: 'address_id',
  capacity: 'capacity',
  current_usage: 'current_usage'
};

exports.Prisma.StockScalarFieldEnum = {
  id: 'id',
  product_id: 'product_id',
  warehouse_id: 'warehouse_id',
  quantity: 'quantity',
  last_updated: 'last_updated',
  updated_by_staff_id: 'updated_by_staff_id'
};

exports.Prisma.ShoppingCartScalarFieldEnum = {
  id: 'id',
  customer_id: 'customer_id',
  created_at: 'created_at',
  last_updated: 'last_updated'
};

exports.Prisma.CartItemScalarFieldEnum = {
  id: 'id',
  cart_id: 'cart_id',
  product_id: 'product_id',
  quantity: 'quantity',
  added_at: 'added_at'
};

exports.Prisma.OrderScalarFieldEnum = {
  id: 'id',
  customer_id: 'customer_id',
  order_date: 'order_date',
  status: 'status',
  credit_card_id: 'credit_card_id',
  total_amount: 'total_amount'
};

exports.Prisma.OrderItemScalarFieldEnum = {
  id: 'id',
  order_id: 'order_id',
  product_id: 'product_id',
  quantity: 'quantity',
  unit_price: 'unit_price',
  warehouse_id: 'warehouse_id'
};

exports.Prisma.DeliveryPlanScalarFieldEnum = {
  id: 'id',
  order_id: 'order_id',
  delivery_type: 'delivery_type',
  delivery_price: 'delivery_price',
  ship_date: 'ship_date',
  delivery_date: 'delivery_date',
  tracking_number: 'tracking_number'
};

exports.Prisma.SupplierScalarFieldEnum = {
  id: 'id',
  name: 'name',
  contact_person: 'contact_person',
  email: 'email',
  phone: 'phone',
  address_id: 'address_id'
};

exports.Prisma.SupplierProductScalarFieldEnum = {
  id: 'id',
  supplier_id: 'supplier_id',
  product_id: 'product_id',
  supplier_price: 'supplier_price'
};

exports.Prisma.VerifyingScalarFieldEnum = {
  id: 'id',
  email: 'email',
  code: 'code',
  created_at: 'created_at'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.UserType = exports.$Enums.UserType = {
  customer: 'customer',
  staff: 'staff'
};

exports.AddressType = exports.$Enums.AddressType = {
  shipping: 'shipping',
  billing: 'billing',
  both: 'both'
};

exports.Prisma.ModelName = {
  User: 'User',
  Customer: 'Customer',
  Staff: 'Staff',
  Address: 'Address',
  CreditCard: 'CreditCard',
  Category: 'Category',
  Product: 'Product',
  ProductPrice: 'ProductPrice',
  Warehouse: 'Warehouse',
  Stock: 'Stock',
  ShoppingCart: 'ShoppingCart',
  CartItem: 'CartItem',
  Order: 'Order',
  OrderItem: 'OrderItem',
  DeliveryPlan: 'DeliveryPlan',
  Supplier: 'Supplier',
  SupplierProduct: 'SupplierProduct',
  Verifying: 'Verifying'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
